---
# Dynamically Generated Charts
common:
  repoURL: https://github.com/uc2-io/uc2-gitops.git
  targetRevision: infra-node-support
  namespace: uc2-openshift-gitops
  project: stack-apps
  destinationNamespace: uc2-openshift-gitops
  prune: true
  selfHeal: true
global:
  use_infra_nodes: true
charts:
  # Cluster Specific Configuration
  stack-apps:
    name: stack-apps
    path: charts/application-manager
    values:
      common:
        destinationNamespace: uc2-openshift-gitops
        namespace: uc2-openshift-gitops
        project: stack-apps
        prune: true
        repoURL: https://github.com/uc2-io/uc2-gitops.git
        selfHeal: true
        targetRevision: infra-node-support
      charts:
        # Configure Storage Classes
        storageclasses:
          annotations:
            argocd.argoproj.io/sync-wave: "-1"
          name: storageclasses
          path: charts/storageclass
          values:
            storageclasses:
              - allowVolumeExpansion: true
                name: pool-spinning-z2-1
                parameters:
                  datastoreurl: ds:///vmfs/volumes/2b4c7ed4-7b52d2f0-0000-000000000000/
                provisioner: csi.vsphere.vmware.com
                reclaimPolicy: Delete
                volumeBindingMode: WaitForFirstConsumer
              - allowVolumeExpansion: true
                name: pool-nvme-vms
                parameters:
                  datastoreurl: ds:///vmfs/volumes/5f403327-763d9b14-7741-0002c9235df0/
                provisioner: csi.vsphere.vmware.com
                reclaimPolicy: Delete
                volumeBindingMode: WaitForFirstConsumer
            unset_default_storage_class: thin-csi
        # Configure Static Node Labels
        static-node-config:
          annotations:
            argocd.argoproj.io/sync-wave: "-1"
          name: static-node-config
          path: charts/static-node-config
          syncOptions:
            - ServerSideApply=true
          values:
            nodes:
              - name: in0.alice.lab.uc2.io
                labels:
                  node-role.kubernetes.io/infra: ""
                  stack.apps.uc2.io/aap: ""
                  stack.apps.uc2.io/quay: ""
                taints:
                  - effect: NoSchedule
                    key: node-role.kubernetes.io/infra
                    value: reserved
                  - effect: NoExecute
                    key: node-role.kubernetes.io/infra
                    value: reserved
              - name: in1.alice.lab.uc2.io
                labels:
                  node-role.kubernetes.io/infra: ""
                  stack.apps.uc2.io/aap: ""
                  stack.apps.uc2.io/quay: ""
                taints:
                  - effect: NoSchedule
                    key: node-role.kubernetes.io/infra
                    value: reserved
                  - effect: NoExecute
                    key: node-role.kubernetes.io/infra
                    value: reserved
              - name: in2.alice.lab.uc2.io
                labels:
                  node-role.kubernetes.io/infra: ""
                  stack.apps.uc2.io/aap: ""
                  stack.apps.uc2.io/quay: ""
                taints:
                  - effect: NoSchedule
                    key: node-role.kubernetes.io/infra
                    value: reserved
                  - effect: NoExecute
                    key: node-role.kubernetes.io/infra
                    value: reserved
              - labels:
                  cluster.ocs.openshift.io/openshift-storage: ""
                name: odf0.alice.lab.uc2.io
              - labels:
                  cluster.ocs.openshift.io/openshift-storage: ""
                name: odf1.alice.lab.uc2.io
              - labels:
                  cluster.ocs.openshift.io/openshift-storage: ""
                name: odf2.alice.lab.uc2.io
        # Deploy MetalLB Operator
        metallb-operator:
          annotations:
            argocd.argoproj.io/sync-wave: "1"
          destinationNamespace: metallb-system
          name: metallb-operator
          path: charts/operator
          values:
            namespace:
              enabled: true
              namespaces:
                - name: metallb-system
            config:
              nodeSelector:
                node-role.kubernetes.io/infra: ""
              tolerations:
                - effect: NoSchedule
                  key: node-role.kubernetes.io/infra
                  value: reserved
                - effect: NoExecute
                  key: node-role.kubernetes.io/infra
                  value: reserved
            operator:
              channel: stable
              installPlanApproval: Automatic
              name: metallb-operator
              source: redhat-operators
              sourceNamespace: openshift-marketplace
            operatorgroup:
              clusterScope: true
              create: true
        # Deploy Node Health Check Operator
        node-healthcheck-operator:
          annotations:
            argocd.argoproj.io/sync-wave: "1"
          destinationNamespace: openshift-workload-availability
          name: node-healthcheck-operator
          path: charts/operator
          values:
            namespace:
              enabled: true
              namespaces:
                - name: openshift-workload-availability
            config:
              nodeSelector:
                node-role.kubernetes.io/infra: ""
              tolerations:
                - effect: NoSchedule
                  key: node-role.kubernetes.io/infra
                  value: reserved
                - effect: NoExecute
                  key: node-role.kubernetes.io/infra
                  value: reserved
            operator:
              channel: stable
              installPlanApproval: Automatic
              name: node-healthcheck-operator
              source: redhat-operators
              sourceNamespace: openshift-marketplace
            operatorgroup:
              clusterScope: true
              create: true
        # Deploy Node Self Remediation Operator
        self-node-remediation-operator:
          annotations:
            argocd.argoproj.io/sync-wave: "1"
          destinationNamespace: openshift-workload-availability
          name: self-node-remediation-operator
          path: charts/operator
          values:
            config:
              nodeSelector:
                node-role.kubernetes.io/infra: ""
              tolerations:
                - effect: NoSchedule
                  key: node-role.kubernetes.io/infra
                  value: reserved
                - effect: NoExecute
                  key: node-role.kubernetes.io/infra
                  value: reserved
            operator:
              channel: stable
              installPlanApproval: Automatic
              name: self-node-remediation
              source: redhat-operators
              sourceNamespace: openshift-marketplace
            operatorgroup:
              clusterScope: true
              create: false
        # Deploy Developer Hub Operator
        rhdh-operator:
          annotations:
            argocd.argoproj.io/sync-wave: "1"
          destinationNamespace: rhdh-operator
          name: rhdh-operator
          path: charts/operator
          values:
            namespace:
              enabled: true
              namespaces:
                - name: rhdh-operator
            config:
              nodeSelector:
                node-role.kubernetes.io/infra: ""
              tolerations:
                - effect: NoSchedule
                  key: node-role.kubernetes.io/infra
                  value: reserved
                - effect: NoExecute
                  key: node-role.kubernetes.io/infra
                  value: reserved
            operator:
              channel: fast
              installPlanApproval: Automatic
              name: rhdh
              source: redhat-operators
              sourceNamespace: openshift-marketplace
            operatorgroup:
              clusterScope: true
              create: true
        # Deploy Quay Operator
        quay-operator:
          annotations:
            argocd.argoproj.io/sync-wave: "1"
          destinationNamespace: openshift-operators
          name: quay-operator
          path: charts/operator
          values:
            namespace:
              enabled: true
              namespaces:
                - name: quay-enterprise
            config:
              nodeSelector:
                node-role.kubernetes.io/infra: ""
              tolerations:
                - effect: NoSchedule
                  key: node-role.kubernetes.io/infra
                  value: reserved
                - effect: NoExecute
                  key: node-role.kubernetes.io/infra
                  value: reserved
            operator:
              channel: stable-3.11
              installPlanApproval: Automatic
              name: quay-operator
              source: redhat-operators
              sourceNamespace: openshift-marketplace
            operatorgroup:
              clusterScope: true
              create: false
        # Deploy Ansible Automation Platform Operator
        aap-operator:
          annotations:
            argocd.argoproj.io/sync-wave: "1"
          destinationNamespace: aap
          name: aap-operator
          path: charts/operator
          values:
            namespace:
              enabled: true
              namespaces:
                - annotations:
                    openshift.io/node-selector: stack.apps.uc2.io/aap=
                  name: aap
            config:
              nodeSelector:
                node-role.kubernetes.io/infra: ""
              tolerations:
                - effect: NoSchedule
                  key: node-role.kubernetes.io/infra
                  value: reserved
                - effect: NoExecute
                  key: node-role.kubernetes.io/infra
                  value: reserved
            operator:
              channel: stable-2.4
              installPlanApproval: Automatic
              name: ansible-automation-platform-operator
              source: redhat-operators
              sourceNamespace: openshift-marketplace
            operatorgroup:
              clusterScope: false
              create: true
        # Deploy Advanced Cluster Management Operator
        acm-operator:
          annotations:
            argocd.argoproj.io/sync-wave: "1"
          destinationNamespace: open-cluster-management
          name: acm-operator
          path: charts/operator
          values:
            namespace:
              enabled: true
              namespaces:
                - labels:
                    openshift.io/cluster-monitoring: "true"
                  name: open-cluster-management
                - name: uc2-gitops
            config:
              nodeSelector:
                node-role.kubernetes.io/infra: ""
              tolerations:
                - effect: NoSchedule
                  key: node-role.kubernetes.io/infra
                  value: reserved
                - effect: NoExecute
                  key: node-role.kubernetes.io/infra
                  value: reserved
            operator:
              channel: release-2.11
              installPlanApproval: Automatic
              name: advanced-cluster-management
              source: redhat-operators
              sourceNamespace: openshift-marketplace
            operatorgroup:
              clusterScope: false
              create: true
        # Deploy Advanced Cluster Security Operator
        acs-operator:
          annotations:
            argocd.argoproj.io/sync-wave: "1"
          destinationNamespace: rhacs-operator
          name: acs-operator
          path: charts/operator
          values:
            namespace:
              enabled: true
              namespaces:
                - name: rhacs-operator
                - name: stackrox
            config:
              nodeSelector:
                node-role.kubernetes.io/infra: ""
              tolerations:
                - effect: NoSchedule
                  key: node-role.kubernetes.io/infra
                  value: reserved
                - effect: NoExecute
                  key: node-role.kubernetes.io/infra
                  value: reserved
            operator:
              channel: stable
              installPlanApproval: Automatic
              name: rhacs-operator
              source: redhat-operators
              sourceNamespace: openshift-marketplace
            operatorgroup:
              clusterScope: true
              create: true
        # Deploy ODF Operator
        odf-operator:
          annotations:
            argocd.argoproj.io/sync-wave: "1"
          destinationNamespace: openshift-storage
          name: odf-operator
          path: charts/operator
          values:
            namespace:
              enabled: true
              namespaces:
                - labels:
                    openshift.io/cluster-monitoring: "true"
                  name: openshift-storage
            config:
              nodeSelector:
                node-role.kubernetes.io/infra: ""
              tolerations:
                - effect: NoSchedule
                  key: node-role.kubernetes.io/infra
                  value: reserved
                - effect: NoExecute
                  key: node-role.kubernetes.io/infra
                  value: reserved
            operator:
              channel: stable-4.16
              installPlanApproval: Automatic
              name: odf-operator
              source: redhat-operators
              sourceNamespace: openshift-marketplace
            operatorgroup:
              clusterScope: false
              create: true
        # Deploy Local Storage Operator
        local-storage-operator:
          annotations:
            argocd.argoproj.io/sync-wave: "1"
          destinationNamespace: openshift-local-storage
          name: local-storage-operator
          path: charts/operator
          values:
            namespace:
              enabled: true
              namespaces:
                - labels:
                    openshift.io/cluster-monitoring: "true"
                  name: openshift-local-storage
            config:
              nodeSelector:
                node-role.kubernetes.io/infra: ""
              tolerations:
                - effect: NoSchedule
                  key: node-role.kubernetes.io/infra
                  value: reserved
                - effect: NoExecute
                  key: node-role.kubernetes.io/infra
                  value: reserved
            operator:
              channel: stable
              installPlanApproval: Automatic
              name: local-storage-operator
              source: redhat-operators
              sourceNamespace: openshift-marketplace
            operatorgroup:
              clusterScope: false
              create: true
        # Deploy Local Volume Set for OpenShift Data Foundation (OSD)
        odf-lvs-osd:
          annotations:
            argocd.argoproj.io/sync-wave: "2"
          destinationNamespace: openshift-local-storage
          name: odf-lvs-osd
          path: charts/stack/odf-lvs
          values:
            lvs_nodeselectorterms:
              - matchExpressions:
                  - key: kubernetes.io/hostname
                    operator: In
                    values:
                      - odf0.alice.lab.uc2.io
                      - odf1.alice.lab.uc2.io
                      - odf2.alice.lab.uc2.io
            lvs_storageclass: odf-osd-localvolumeset
        # Deploy OpenShift Data Foundation
        odf-storagecluster:
          annotations:
            argocd.argoproj.io/sync-wave: "3"
          destinationNamespace: openshift-storage
          name: odf-storagecluster
          path: charts/stack/odf
          values:
            ansible-runner-job:
              enabled: true
              jobs:
                - annotations:
                    argocd.argoproj.io/hook: PreSync
                    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
                  ansible_extravars_json: >-
                    {"lvs_expected_pv_count":3,"lvs_name":"odf-osd-localvolumeset","lvs_namespace":"openshift-local-storage","lvs_storageclass":"odf-osd-localvolumeset"}
                  ansible_playbook: ansible/job-prehook-validate-lvs.yaml
                  git_branch: infra-node-support
                  name: prehook-validate-lvs
                - annotations:
                    argocd.argoproj.io/hook: PostSync
                    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
                  ansible_extravars_json: >-
                    {"additional_plugins":["odf-console"]}
                  ansible_playbook: ansible/job-posthook-console-plugin.yaml
                  git_branch: infra-node-support
                  name: posthook-odf-console-plugin
            storagecluster_enabledefaultstorageclass: true
            storagecluster_storage: 1000Gi
            storagecluster_storageclass: odf-osd-localvolumeset
            storagecluster_use_localstorage: true
            storagecluster_version: 4.16.0
        # Deploy Ansible Automation Platform
        aap:
          annotations:
            argocd.argoproj.io/sync-wave: "4"
          destinationNamespace: aap
          name: aap
          path: charts/stack/aap
          values:
            aap_ac_route_host: aap.apps.alice.lab.uc2.io
            aap_ac_set_self_labels: false
            ansible-runner-job:
              enabled: true
              jobs:
                - annotations:
                    argocd.argoproj.io/hook: PostSync
                    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
                  ansible_playbook: ansible/job-posthook-aap-bootstrap.yaml
                  git_branch: infra-node-support
                  name: posthook-aap-bootstrap
                  volume_mounts:
                    - mountPath: /var/secrets/aap-manifest
                      name: aap-manifest
                      readOnly: true
                  volumes:
                    - name: aap-manifest
                      secret:
                        secretName: aap-manifest
                - annotations:
                    argocd.argoproj.io/hook: PostSync
                    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
                  ansible_extravars_json: >-
                    {"console_links":[{"name":"aap-console-link","route_name":"automation-controller","route_namespace":"aap","imageURL":"https://www.ansible.com/images/project-logos/ansible-community.svg","section":"Stack Apps","location":"ApplicationMenu","text":"Ansible Automation Platform"}]}
                  ansible_playbook: ansible/job-console-links.yaml
                  git_branch: infra-node-support
                  name: posthook-aap-console-link
        # Deploy Red Hat Advanced Cluster Management
        acm:
          annotations:
            argocd.argoproj.io/sync-wave: "4"
          destinationNamespace: open-cluster-management
          name: acm
          path: charts/stack/acm
          values:
            ansible-runner-job:
              enabled: true
              jobs:
                - annotations:
                    argocd.argoproj.io/hook: PreSync
                    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
                  ansible_extravars_json: >-
                    {"mch_namespace":"open-cluster-management","mch_pull_secret_name":"pull-secret"}
                  ansible_playbook: ansible/job-prehook-mch-pull-secret.yaml
                  git_branch: infra-node-support
                  name: prehook-mch-pull-secret
                - annotations:
                    argocd.argoproj.io/hook: PostSync
                    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
                  ansible_extravars_json: >-
                    {"mco_storage_class":"odf-storagecluster-ceph-rbd","use_infra_nodes":true}
                  ansible_playbook: ansible/job-posthook-mco-deploy.yaml
                  git_branch: infra-node-support
                  name: posthook-mco-deploy
        # Deploy Quay Registry
        quay:
          annotations:
            argocd.argoproj.io/sync-wave: "4"
          destinationNamespace: quay-enterprise
          name: quay
          path: charts/stack/quay
        # Deploy Red Hat Advanced Cluster Security
        acs:
          annotations:
            argocd.argoproj.io/sync-wave: "4"
          destinationNamespace: stackrox
          name: acs
          path: charts/stack/acs
          values:
            ansible-runner-job:
              enabled: true
              jobs:
                - annotations:
                    argocd.argoproj.io/hook: PreSync
                    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
                  ansible_extravars_json: >-
                    {"central_namespace":"stackrox","central_route_host":"central.apps.alice.lab.uc2.io"}
                  ansible_playbook: ansible/job-prehook-acs-tls.yaml
                  git_branch: infra-node-support
                  name: prehook-acs-tls
                  serviceaccount: microcert
                  volume_mounts:
                    - mountPath: /etc/microcert/config
                      name: microcert-token
                      readOnly: true
                  volumes:
                    - name: microcert-token
                      secret:
                        secretName: microcert-token
                - annotations:
                    argocd.argoproj.io/hook: PostSync
                    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
                  ansible_extravars_json: >-
                    {"central_validate_certs":false,"use_infra_nodes":true}
                  ansible_playbook: ansible/job-posthook-acs-bootstrap.yaml
                  git_branch: infra-node-support
                  name: posthook-acs-bootstrap
                - annotations:
                    argocd.argoproj.io/hook: PostSync
                    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
                  ansible_extravars_json: >-
                    {"console_links":[{"name":"acs-console-link","route_name":"central","route_namespace":"stackrox","imageURL":"https://avatars.githubusercontent.com/u/40638982?s=48&v=4","section":"Stack Apps","location":"ApplicationMenu","text":"Advanced Cluster Security"}]}
                  ansible_playbook: ansible/job-console-links.yaml
                  git_branch: infra-node-support
                  name: posthook-acs-console-link
